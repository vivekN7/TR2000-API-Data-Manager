-- ===============================================================================
-- Staging Tables - TR2000 ETL System
-- ===============================================================================
-- Purpose: Staging tables for JSON data parsing (all VARCHAR2 for safe parsing)
-- ===============================================================================

-- STG_PLANTS: Staging for plant data (all VARCHAR2 for safe parsing)
CREATE TABLE STG_PLANTS (
    staging_id                  NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    raw_json_id                 NUMBER,
    plant_id                    VARCHAR2(50),
    operator_id                 VARCHAR2(50),
    operator_name               VARCHAR2(255),
    short_description           VARCHAR2(255),
    project                     VARCHAR2(255),
    long_description            VARCHAR2(4000),
    common_lib_plant_code       VARCHAR2(50),
    initial_revision            VARCHAR2(50),
    area_id                     VARCHAR2(50),
    area                        VARCHAR2(255),
    enable_embedded_note        VARCHAR2(50),
    category_id                 VARCHAR2(50),
    category                    VARCHAR2(255),
    document_space_link         VARCHAR2(500),
    enable_copy_pcs_from_plant  VARCHAR2(50),
    over_length                 VARCHAR2(50),
    pcs_qa                      VARCHAR2(50),
    eds_mj                      VARCHAR2(50),
    celsius_bar                 VARCHAR2(50),
    web_info_text               VARCHAR2(4000),
    bolt_tension_text           VARCHAR2(4000),
    visible                     VARCHAR2(10),
    windows_remark_text         VARCHAR2(4000),
    user_protected              VARCHAR2(10),
    created_date                DATE DEFAULT SYSDATE
);

COMMENT ON TABLE STG_PLANTS IS 'Staging table for plant data from API JSON parsing. All VARCHAR2 for safe initial load';

CREATE INDEX IDX_STG_PLANTS_RAW ON STG_PLANTS(raw_json_id);
CREATE INDEX IDX_STG_PLANTS_PLANT ON STG_PLANTS(plant_id);

-- STG_ISSUES: Staging for issue data (all VARCHAR2 for safe parsing)
CREATE TABLE STG_ISSUES (
    staging_id          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    raw_json_id         NUMBER,
    plant_id            VARCHAR2(50),
    issue_revision      VARCHAR2(50),
    status              VARCHAR2(50),
    rev_date            VARCHAR2(50),      -- String initially, converted later
    protect_status      VARCHAR2(50),
    general_revision    VARCHAR2(50),
    general_rev_date    VARCHAR2(50),
    pcs_revision        VARCHAR2(50),
    pcs_rev_date        VARCHAR2(50),
    eds_revision        VARCHAR2(50),
    eds_rev_date        VARCHAR2(50),
    vds_revision        VARCHAR2(50),
    vds_rev_date        VARCHAR2(50),
    vsk_revision        VARCHAR2(50),
    vsk_rev_date        VARCHAR2(50),
    mds_revision        VARCHAR2(50),
    mds_rev_date        VARCHAR2(50),
    esk_revision        VARCHAR2(50),
    esk_rev_date        VARCHAR2(50),
    sc_revision         VARCHAR2(50),
    sc_rev_date         VARCHAR2(50),
    vsm_revision        VARCHAR2(50),
    vsm_rev_date        VARCHAR2(50),
    user_name           VARCHAR2(255),
    user_entry_time     VARCHAR2(50),
    user_protected      VARCHAR2(10),
    created_date        DATE DEFAULT SYSDATE
);

COMMENT ON TABLE STG_ISSUES IS 'Staging table for issue data from API JSON parsing. All VARCHAR2 for safe initial load';

CREATE INDEX IDX_STG_ISSUES_RAW ON STG_ISSUES(raw_json_id);
CREATE INDEX IDX_STG_ISSUES_PLANT ON STG_ISSUES(plant_id);
CREATE INDEX IDX_STG_ISSUES_ISSUE ON STG_ISSUES(issue_revision);