-- ===============================================================================
-- GUID Tracking Tables - For API Transaction and External System Management
-- ===============================================================================
-- Purpose: Track API operations and external system references with GUIDs
-- Date: 2025-08-26
-- ===============================================================================

-- API_TRANSACTIONS: Track all API operations with correlation
CREATE TABLE API_TRANSACTIONS (
    transaction_guid    RAW(16) DEFAULT SYS_GUID() PRIMARY KEY,
    correlation_id      VARCHAR2(36) NOT NULL,  -- Links related operations
    idempotency_key     VARCHAR2(36),           -- Prevents duplicate operations
    operation_type      VARCHAR2(50) NOT NULL,  -- 'FETCH_PLANTS', 'UPDATE_ISSUE', etc.
    entity_type         VARCHAR2(50),           -- 'PLANT', 'ISSUE', etc.
    entity_id           VARCHAR2(100),          -- Business key
    entity_guid         RAW(16),                -- Internal GUID reference
    request_method      VARCHAR2(10),           -- GET, POST, PUT, DELETE
    request_url         VARCHAR2(500),
    request_headers     CLOB,
    request_body        CLOB,
    response_code       NUMBER,
    response_headers    CLOB,
    response_body       CLOB,
    status              VARCHAR2(20) DEFAULT 'PENDING',  -- PENDING, SUCCESS, FAILED
    error_message       VARCHAR2(4000),
    external_system     VARCHAR2(50),           -- Source/target system
    started_at          TIMESTAMP DEFAULT SYSTIMESTAMP,
    completed_at        TIMESTAMP,
    duration_ms         NUMBER,                 -- Calculated duration
    created_by          VARCHAR2(50) DEFAULT USER,
    created_date        DATE DEFAULT SYSDATE
);

-- Comments
COMMENT ON TABLE API_TRANSACTIONS IS 'Tracks all API transactions with correlation IDs for cross-system debugging and idempotency';
COMMENT ON COLUMN API_TRANSACTIONS.transaction_guid IS 'Unique identifier for this transaction';
COMMENT ON COLUMN API_TRANSACTIONS.correlation_id IS 'Links related operations across system boundaries';
COMMENT ON COLUMN API_TRANSACTIONS.idempotency_key IS 'Prevents duplicate operations on retry';
COMMENT ON COLUMN API_TRANSACTIONS.operation_type IS 'Type of operation performed';
COMMENT ON COLUMN API_TRANSACTIONS.entity_guid IS 'Reference to internal entity GUID';
COMMENT ON COLUMN API_TRANSACTIONS.status IS 'Current status of the transaction';
COMMENT ON COLUMN API_TRANSACTIONS.duration_ms IS 'Time taken in milliseconds';

-- Indexes for performance
CREATE INDEX IDX_API_TRANS_CORRELATION ON API_TRANSACTIONS(correlation_id);
CREATE INDEX IDX_API_TRANS_IDEMPOTENCY ON API_TRANSACTIONS(idempotency_key);
CREATE INDEX IDX_API_TRANS_ENTITY ON API_TRANSACTIONS(entity_type, entity_id);
CREATE INDEX IDX_API_TRANS_STATUS ON API_TRANSACTIONS(status, started_at);

-- EXTERNAL_SYSTEM_REFS: Map internal GUIDs to external system identifiers
CREATE TABLE EXTERNAL_SYSTEM_REFS (
    ref_id              NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    internal_guid       RAW(16) NOT NULL,       -- Our GUID (plant_guid, issue_guid)
    entity_type         VARCHAR2(50) NOT NULL,  -- 'PLANT', 'ISSUE', etc.
    external_system     VARCHAR2(50) NOT NULL,  -- 'SAP', 'MAXIMO', 'TEAMS', etc.
    external_id         VARCHAR2(100),          -- Their ID
    external_guid       VARCHAR2(36),           -- Their GUID if they have one
    external_url        VARCHAR2(500),          -- URL in their system
    sync_status         VARCHAR2(20) DEFAULT 'PENDING',  -- PENDING, SYNCED, ERROR
    last_pushed_at      TIMESTAMP,              -- When we sent data to them
    last_pulled_at      TIMESTAMP,              -- When we got data from them
    last_error          VARCHAR2(4000),
    metadata            CLOB,                   -- JSON for additional data
    created_date        DATE DEFAULT SYSDATE,
    modified_date       DATE DEFAULT SYSDATE,
    CONSTRAINT UK_EXT_SYS_REF UNIQUE (internal_guid, external_system)
);

-- Comments
COMMENT ON TABLE EXTERNAL_SYSTEM_REFS IS 'Maps internal GUIDs to external system identifiers for multi-system integration';
COMMENT ON COLUMN EXTERNAL_SYSTEM_REFS.internal_guid IS 'Reference to our internal entity GUID';
COMMENT ON COLUMN EXTERNAL_SYSTEM_REFS.entity_type IS 'Type of entity (PLANT, ISSUE, etc.)';
COMMENT ON COLUMN EXTERNAL_SYSTEM_REFS.external_system IS 'Name of external system';
COMMENT ON COLUMN EXTERNAL_SYSTEM_REFS.external_id IS 'ID in the external system';
COMMENT ON COLUMN EXTERNAL_SYSTEM_REFS.external_guid IS 'GUID in external system if available';
COMMENT ON COLUMN EXTERNAL_SYSTEM_REFS.sync_status IS 'Current synchronization status';
COMMENT ON COLUMN EXTERNAL_SYSTEM_REFS.metadata IS 'JSON for additional system-specific data';

-- Indexes
CREATE INDEX IDX_EXT_SYS_INTERNAL ON EXTERNAL_SYSTEM_REFS(internal_guid);
CREATE INDEX IDX_EXT_SYS_EXTERNAL ON EXTERNAL_SYSTEM_REFS(external_system, external_id);
CREATE INDEX IDX_EXT_SYS_STATUS ON EXTERNAL_SYSTEM_REFS(sync_status);

PROMPT GUID tracking tables created successfully