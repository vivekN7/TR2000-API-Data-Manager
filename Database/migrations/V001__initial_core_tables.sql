-- ===============================================================================
-- Migration V001: Create Core Tables
-- Author: System
-- Date: 2025-08-23
-- Description: Initial core tables for TR2000 ETL system
-- Dependencies: V000
-- ===============================================================================

-- Record migration start
EXEC pr_record_migration('V001', 'Create core tables', 'V001__initial_core_tables.sql');

-- ===============================================================================
-- RAW_JSON Storage Table
-- ===============================================================================
CREATE TABLE RAW_JSON (
    raw_json_id         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    endpoint_key        VARCHAR2(100) NOT NULL,
    plant_id            VARCHAR2(50),
    issue_revision      VARCHAR2(50),
    api_url             VARCHAR2(500) NOT NULL,
    response_json       CLOB NOT NULL,
    response_hash       VARCHAR2(64) NOT NULL,
    api_call_timestamp  TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    created_date        DATE DEFAULT SYSDATE NOT NULL,
    CONSTRAINT uk_raw_json_hash UNIQUE (response_hash)
);

CREATE INDEX idx_raw_json_endpoint ON RAW_JSON(endpoint_key);
CREATE INDEX idx_raw_json_plant ON RAW_JSON(plant_id);
CREATE INDEX idx_raw_json_issue ON RAW_JSON(issue_revision);
CREATE INDEX idx_raw_json_timestamp ON RAW_JSON(api_call_timestamp);

-- ===============================================================================
-- PLANTS Table
-- ===============================================================================
CREATE TABLE PLANTS (
    plant_id            VARCHAR2(50) PRIMARY KEY,
    operator_id         NUMBER,
    operator_name       VARCHAR2(255),
    short_description   VARCHAR2(255),
    project             VARCHAR2(255),
    long_description    VARCHAR2(4000),
    common_lib_plant_code VARCHAR2(50),
    initial_revision    VARCHAR2(50),
    area_id             NUMBER,
    area                VARCHAR2(255),
    enable_embedded_note CHAR(1) DEFAULT 'N' CHECK (enable_embedded_note IN ('Y', 'N')),
    category_id         VARCHAR2(50),
    category            VARCHAR2(255),
    document_space_link VARCHAR2(500),
    enable_copy_pcs_from_plant CHAR(1) DEFAULT 'N' CHECK (enable_copy_pcs_from_plant IN ('Y', 'N')),
    over_length         CHAR(1) DEFAULT 'N' CHECK (over_length IN ('Y', 'N')),
    pcs_qa              CHAR(1) DEFAULT 'N' CHECK (pcs_qa IN ('Y', 'N')),
    eds_mj              CHAR(1) DEFAULT 'N' CHECK (eds_mj IN ('Y', 'N')),
    celsius_bar         CHAR(1) DEFAULT 'N' CHECK (celsius_bar IN ('Y', 'N')),
    web_info_text       VARCHAR2(4000),
    show_issues_from_common_lib_plant CHAR(1) DEFAULT 'N',
    is_valid            CHAR(1) DEFAULT 'Y' NOT NULL CHECK (is_valid IN ('Y', 'N')),
    created_date        DATE DEFAULT SYSDATE NOT NULL,
    modified_date       DATE DEFAULT SYSDATE NOT NULL,
    created_by          VARCHAR2(50) DEFAULT USER NOT NULL,
    modified_by         VARCHAR2(50) DEFAULT USER NOT NULL
);

CREATE INDEX idx_plants_valid ON PLANTS(is_valid);
CREATE INDEX idx_plants_operator ON PLANTS(operator_id);

-- ===============================================================================
-- ISSUES Table
-- ===============================================================================
CREATE TABLE ISSUES (
    issue_id            NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    plant_id            VARCHAR2(50) NOT NULL,
    issue_revision      VARCHAR2(50) NOT NULL,
    status              VARCHAR2(50),
    rev_date            DATE,
    protect_status      VARCHAR2(50),
    general_revision    VARCHAR2(50),
    general_rev_date    DATE,
    pcs_revision        VARCHAR2(50),
    pcs_rev_date        DATE,
    eds_revision        VARCHAR2(50),
    eds_rev_date        DATE,
    vds_revision        VARCHAR2(50),
    vds_rev_date        DATE,
    vsk_revision        VARCHAR2(50),
    vsk_rev_date        DATE,
    mds_revision        VARCHAR2(50),
    mds_rev_date        DATE,
    esk_revision        VARCHAR2(50),
    esk_rev_date        DATE,
    sc_revision         VARCHAR2(50),
    sc_rev_date         DATE,
    vsm_revision        VARCHAR2(50),
    vsm_rev_date        DATE,
    user_name           VARCHAR2(255),
    is_valid            CHAR(1) DEFAULT 'Y' NOT NULL CHECK (is_valid IN ('Y', 'N')),
    created_date        DATE DEFAULT SYSDATE NOT NULL,
    modified_date       DATE DEFAULT SYSDATE NOT NULL,
    CONSTRAINT uk_issues_plant_rev UNIQUE (plant_id, issue_revision),
    CONSTRAINT fk_issues_plant FOREIGN KEY (plant_id) REFERENCES PLANTS(plant_id)
);

CREATE INDEX idx_issues_plant ON ISSUES(plant_id);
CREATE INDEX idx_issues_valid ON ISSUES(is_valid);
CREATE INDEX idx_issues_revision ON ISSUES(issue_revision);

-- ===============================================================================
-- SELECTION_LOADER Table
-- ===============================================================================
CREATE TABLE SELECTION_LOADER (
    selection_id        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    plant_id            VARCHAR2(50) NOT NULL,
    issue_revision      VARCHAR2(50),
    is_active           CHAR(1) DEFAULT 'Y' NOT NULL CHECK (is_active IN ('Y', 'N')),
    selected_by         VARCHAR2(50),
    selection_date      DATE DEFAULT SYSDATE NOT NULL,
    last_etl_run        TIMESTAMP,
    etl_status          VARCHAR2(50),
    CONSTRAINT uk_selection_loader UNIQUE (plant_id, issue_revision)
);

CREATE INDEX idx_selection_plant ON SELECTION_LOADER(plant_id);
CREATE INDEX idx_selection_active ON SELECTION_LOADER(is_active);

COMMIT;