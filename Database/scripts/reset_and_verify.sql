SET SERVEROUTPUT ON
SET LINESIZE 200

PROMPT ====================================
PROMPT Executing reset_for_testing
PROMPT ====================================

BEGIN
    PKG_ETL_TEST_UTILS.reset_for_testing;
    DBMS_OUTPUT.PUT_LINE('Reset completed');
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error during reset: ' || SQLERRM);
        RAISE;
END;
/

PROMPT ====================================
PROMPT Verifying all data tables are cleared
PROMPT ====================================

-- Check Reference Tables
SELECT 'PCS_REFERENCES' as table_name, COUNT(*) as count FROM PCS_REFERENCES
UNION ALL
SELECT 'VDS_REFERENCES', COUNT(*) FROM VDS_REFERENCES
UNION ALL
SELECT 'MDS_REFERENCES', COUNT(*) FROM MDS_REFERENCES
UNION ALL
SELECT 'EDS_REFERENCES', COUNT(*) FROM EDS_REFERENCES
UNION ALL
SELECT 'VSK_REFERENCES', COUNT(*) FROM VSK_REFERENCES
UNION ALL
SELECT 'ESK_REFERENCES', COUNT(*) FROM ESK_REFERENCES
UNION ALL
SELECT 'PIPE_ELEMENT_REFERENCES', COUNT(*) FROM PIPE_ELEMENT_REFERENCES
UNION ALL
SELECT 'SC_REFERENCES', COUNT(*) FROM SC_REFERENCES
UNION ALL
SELECT 'VSM_REFERENCES', COUNT(*) FROM VSM_REFERENCES
UNION ALL
-- PCS Tables
SELECT 'PCS_LIST', COUNT(*) FROM PCS_LIST
UNION ALL
SELECT 'PCS_HEADER_PROPERTIES', COUNT(*) FROM PCS_HEADER_PROPERTIES
UNION ALL
SELECT 'PCS_TEMP_PRESSURES', COUNT(*) FROM PCS_TEMP_PRESSURES
UNION ALL
SELECT 'PCS_PIPE_SIZES', COUNT(*) FROM PCS_PIPE_SIZES
UNION ALL
SELECT 'PCS_PIPE_ELEMENTS', COUNT(*) FROM PCS_PIPE_ELEMENTS
UNION ALL
SELECT 'PCS_VALVE_ELEMENTS', COUNT(*) FROM PCS_VALVE_ELEMENTS
UNION ALL
SELECT 'PCS_EMBEDDED_NOTES', COUNT(*) FROM PCS_EMBEDDED_NOTES
UNION ALL
-- VDS Catalog - IMPORTANT CHECK
SELECT 'VDS_LIST', COUNT(*) FROM VDS_LIST
UNION ALL
-- Audit Tables
SELECT 'RAW_JSON', COUNT(*) FROM RAW_JSON
UNION ALL
SELECT 'ETL_RUN_LOG', COUNT(*) FROM ETL_RUN_LOG
UNION ALL
SELECT 'ETL_STATISTICS', COUNT(*) FROM ETL_STATISTICS
ORDER BY 1;

PROMPT ====================================
PROMPT Checking staging tables are cleared
PROMPT ====================================

SELECT 'STG_PCS_REFERENCES' as table_name, COUNT(*) as count FROM STG_PCS_REFERENCES
UNION ALL
SELECT 'STG_VDS_REFERENCES', COUNT(*) FROM STG_VDS_REFERENCES
UNION ALL
SELECT 'STG_MDS_REFERENCES', COUNT(*) FROM STG_MDS_REFERENCES
UNION ALL
SELECT 'STG_EDS_REFERENCES', COUNT(*) FROM STG_EDS_REFERENCES
UNION ALL
SELECT 'STG_VSK_REFERENCES', COUNT(*) FROM STG_VSK_REFERENCES
UNION ALL
SELECT 'STG_ESK_REFERENCES', COUNT(*) FROM STG_ESK_REFERENCES
UNION ALL
SELECT 'STG_PIPE_ELEMENT_REFERENCES', COUNT(*) FROM STG_PIPE_ELEMENT_REFERENCES
UNION ALL
SELECT 'STG_SC_REFERENCES', COUNT(*) FROM STG_SC_REFERENCES
UNION ALL
SELECT 'STG_VSM_REFERENCES', COUNT(*) FROM STG_VSM_REFERENCES
UNION ALL
SELECT 'STG_PCS_LIST', COUNT(*) FROM STG_PCS_LIST
UNION ALL
SELECT 'STG_PCS_HEADER_PROPERTIES', COUNT(*) FROM STG_PCS_HEADER_PROPERTIES
UNION ALL
SELECT 'STG_PCS_TEMP_PRESSURES', COUNT(*) FROM STG_PCS_TEMP_PRESSURES
UNION ALL
SELECT 'STG_PCS_PIPE_SIZES', COUNT(*) FROM STG_PCS_PIPE_SIZES
UNION ALL
SELECT 'STG_PCS_PIPE_ELEMENTS', COUNT(*) FROM STG_PCS_PIPE_ELEMENTS
UNION ALL
SELECT 'STG_PCS_VALVE_ELEMENTS', COUNT(*) FROM STG_PCS_VALVE_ELEMENTS
UNION ALL
SELECT 'STG_PCS_EMBEDDED_NOTES', COUNT(*) FROM STG_PCS_EMBEDDED_NOTES
UNION ALL
SELECT 'STG_VDS_LIST', COUNT(*) FROM STG_VDS_LIST
ORDER BY 1;

PROMPT ====================================
PROMPT Checking control tables (should have data)
PROMPT ====================================

SELECT 'ETL_FILTER' as table_name, COUNT(*) as count FROM ETL_FILTER
UNION ALL
SELECT 'CONTROL_SETTINGS', COUNT(*) FROM CONTROL_SETTINGS
UNION ALL
SELECT 'CONTROL_ENDPOINTS', COUNT(*) FROM CONTROL_ENDPOINTS
ORDER BY 1;

EXIT;
