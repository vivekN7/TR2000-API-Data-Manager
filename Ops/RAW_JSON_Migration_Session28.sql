-- =====================================================
-- RAW_JSON Architecture Fix - Session 28 Phase 1
-- Deploy enhanced RAW_JSON table and procedure
-- =====================================================

-- Step 1: Backup existing RAW_JSON data (if any)
CREATE TABLE RAW_JSON_BACKUP_SESSION28 AS 
SELECT * FROM RAW_JSON;

-- Step 2: Drop and recreate RAW_JSON table with enhanced structure
DROP TABLE RAW_JSON;

-- Enhanced RAW_JSON table for complete API response audit trail
CREATE TABLE RAW_JSON (
    JSON_ID            NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ETL_RUN_ID         NUMBER,
    ENDPOINT_NAME      VARCHAR2(100) NOT NULL,
    REQUEST_URL        VARCHAR2(1000),
    REQUEST_PARAMS     CLOB,
    RESPONSE_STATUS    NUMBER,
    PLANT_ID           VARCHAR2(50),
    CREATED_DATE       TIMESTAMP(6) DEFAULT SYSTIMESTAMP NOT NULL,
    JSON_DATA          CLOB CHECK (JSON_DATA IS JSON),
    RESP_HASH_SHA256   RAW(32) NOT NULL,
    PROCESSED_FLAG     CHAR(1) DEFAULT 'N' CHECK (PROCESSED_FLAG IN ('Y','N')),
    DURATION_MS        NUMBER,
    HEADERS_JSON       CLOB
) LOB (JSON_DATA) STORE AS SECUREFILE (
    COMPRESS MEDIUM
    DEDUPLICATE
);

-- Performance indexes for RAW_JSON table
CREATE INDEX IX_RAWJSON_PICK
  ON RAW_JSON (ENDPOINT_NAME, PROCESSED_FLAG, CREATED_DATE);

CREATE INDEX IX_RAWJSON_HASH
  ON RAW_JSON (RESP_HASH_SHA256);

-- Step 3: Create enhanced SP_INSERT_RAW_JSON procedure
CREATE OR REPLACE PROCEDURE SP_INSERT_RAW_JSON(
    p_etl_run_id     NUMBER,
    p_endpoint       VARCHAR2,
    p_request_url    VARCHAR2 DEFAULT NULL,
    p_request_params CLOB DEFAULT NULL,
    p_response_status NUMBER DEFAULT 200,
    p_plant_id       VARCHAR2 DEFAULT NULL,
    p_json_data      CLOB,
    p_duration_ms    NUMBER DEFAULT NULL,
    p_headers        CLOB DEFAULT NULL
) AS
    v_hash RAW(32);
BEGIN
    -- Compute hash for deduplication
    v_hash := STANDARD_HASH(p_json_data, 'SHA256');
    
    -- Insert with comprehensive metadata
    INSERT INTO RAW_JSON (
        ETL_RUN_ID, ENDPOINT_NAME, REQUEST_URL, REQUEST_PARAMS,
        RESPONSE_STATUS, PLANT_ID, JSON_DATA, RESP_HASH_SHA256,
        DURATION_MS, HEADERS_JSON
    ) VALUES (
        p_etl_run_id, p_endpoint, p_request_url, p_request_params,
        p_response_status, p_plant_id, p_json_data, v_hash,
        p_duration_ms, p_headers
    );
    
EXCEPTION
    WHEN OTHERS THEN
        -- Log error but don't break ETL
        LOG_ETL_ERROR(p_etl_run_id, 'RAW_JSON_INSERT', 'SP_INSERT_RAW_JSON', SQLERRM);
END SP_INSERT_RAW_JSON;
/

-- Step 4: Verify deployment
SELECT 
    'RAW_JSON table created with ' || COUNT(*) || ' columns' as deployment_status
FROM USER_TAB_COLUMNS 
WHERE TABLE_NAME = 'RAW_JSON';

SELECT 
    'Enhanced SP_INSERT_RAW_JSON procedure created' as procedure_status
FROM USER_PROCEDURES 
WHERE OBJECT_NAME = 'SP_INSERT_RAW_JSON';

PROMPT '=====================================================';
PROMPT 'RAW_JSON Architecture Fix - Session 28 Phase 1 Complete';
PROMPT 'Next: Test RAW_JSON insertion via application';
PROMPT '=====================================================';