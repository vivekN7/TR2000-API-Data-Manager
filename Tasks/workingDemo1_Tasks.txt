Lets now do a working demo for me to show as a proof of concept, and clean it up and make it look nice as well. This is what is needed.   

So lets take one useful GET endpoint and make that work extremely well and beautiful.

* We will pick "Get pipe size"
According to the help webpage that you already have, this is the endpoint for this
/plants/{id}/pcs/{name}/rev/{revision}/pipe-sizes | GET |

* These are the input required:
  - PLANTID = [String] (e.g., 110 or JSV) > We get this information from "Get plants" where user selects the plant name and we get the ID
  - PCSNAME = [String] (e.g., AD100) > We get this information from "GET PCS list" where user selects the pipe class name and we get the PCS name
  - REVISION = [String] (e.g., B) > We get this information from "GET PCS list" where user selects the revision name and we get the revision

  
* When the above input is given, this then returns the PCS pipe size values:

PCS = [String]
Revision = [String]
NomSizeRevisionMark = [String]
OuterDiamRevisionMark = [String]
WallThicknessRevisionMark = [String]
ScheduleRevisionMark = [String]
CorrAllowRevisionMark = [String]
WeldFactorRevisionMark = [String]
UnderTolRevisionMark = [String]
NomSize = [String]
OuterDiam = [String]
WallThickness = [String]
Schedule = [String]
UnderTolerance = [String]
CorrosionAllowance = [String]
WeldingFactor = [String]
DimElementChange = [String]
ScheduleInMatrix = [String]

Example 1 https://equinor.pipespec-api.presight.com/plants/110/pcs/AD100/rev/B/pipe-sizes
Example 2 https://equinor.pipespec-api.presight.com/plants/JSV/pcs/AD100/rev/B/pipe-sizes


So We now need the following in this order:
a) GET plants
b) GET PCS list
c) GET revisions 

> and finally the end result:
4) GET pipe sizes

---------------
Here is the GET plants endpoint info from the help webpage:

Get plants
/plants/ | GET |

URL Params (none) - so this needs no input

Returns Operators

OperatorID = [Int32]
OperatorName = [String]
PlantID = [Int32]
ShortDescription = [String]
Project = [String]
LongDescription = [String]
CommonLibPlantCode = [String]
InitialRevision = [String]
AreaID = [Int32]
Area = [String]

---------------

Here is the GET PCS list endpoint info from the help webpage:

Get PCS list
/plants/{id}/pcs | GET |

URL Params

PLANTID = [String]
NAMEFILTER = [String]
STATUSFILTER = [String]
NOTEID = [Int32]
VDS = [String]
ELEMENTID = [Int32]
Returns PCS list

PCS = [String]
Revision = [String]
Status = [String]
RevDate = [String]
RatingClass = [String]
TestPressure = [String]
MaterialGroup = [String]
DesignCode = [String]
LastUpdate = [String]
LastUpdateBy = [String]
Approver = [String]
SpecialReqID = [Int32]
TubePCS = [String]
NewVDSSection = [String]

Example 1 https://equinor.pipespec-api.presight.com/plants/110/pcs?namefilter=B*&statusfilter=W,R,O
Example 2 https://equinor.pipespec-api.presight.com/plants/JSV/pcs?namefilter=B*&statusfilter=W,R,O


Although there are many parameters, we will only use PLANTID and get all for the selected plantID {id}.


Steps to implement:
1) Create a new webpage on the sidebar "Get Pipe Sizes"
2) In the new webpage there should be a Listbox each for Plant Name, Pipe Class Name, and Revision Name
3) The Plant Name listbox should be already filled from the "Get plants" endpoint. The plant name here is the "LongDescription" item.
4) User selects the plant name and from this we will know the plantID > now fill in the Pipe Class Name listbox with the "Get PCS list" endpoint using the plantID as input.
4a) This should then fill in the pipe class name listbox (PCS field)
5) User now selects the pipe class name from the lsitbox
5a) This should now fill in the Revision Name listbox with all the revisions (field: Revision) available for this PCS from the output obtained from the same "GET PCS list"
6) User now selects the revision from the listbox
7) so we then have all input which will then load the get pipe sizes grid.


